PROBLEM TITLE : Linked List Cycle
PROBLEM DIFFICULTY : Medium
PLATFORM NAME : LeetCode (2)
PROBLEM LINK : https://leetcode.com/problems/add-two-numbers/

SOLUTION : [Time Complexity: O(max(n, m), Space Complexity: O(max(n, m)]

class Solution 
{
        public ListNode addTwoNumbers(ListNode l1, ListNode l2) 
        {
            ListNode dummyHead = new ListNode(0);
            ListNode curr = dummyHead;
            int carry = 0;

            while (l1 != null || l2 != null || carry != 0) 
            {
                int sum = carry;
                if (l1 != null) 
                {
                    sum += l1.val;
                    l1 = l1.next;
                }
                if (l2 != null) 
                {
                    sum += l2.val;
                    l2 = l2.next;
                }

                carry = sum / 10;
                curr.next = new ListNode(sum % 10);
                curr = curr.next;
            }

            return dummyHead.next;
    }
}
