PROBLEM TITLE : First and Last Occurrences
PROBLEM DIFFICULTY : Medium
PLATFORM NAME : GeeksForGeeks
PROBLEM LINK : https://www.geeksforgeeks.org/problems/first-and-last-occurrences-of-x3116/1

SOLUTION : [Time Complexity: O(n), Space Complexity: O(1)]

class Solution 
{
    public int[] searchRange(int[] nums, int target) 
    {
        ArrayList<Integer> result = new ArrayList<>();
        int first = searchFirst(nums, target, 0, nums.length - 1);
        int last = searchLast(nums, target, 0, nums.length - 1);
        ans.add(first);
        ans.add(last);
        return ans;
    }

    private int searchFirst(int[] nums, int target, int left, int right) 
    {
        if (left > right) 
        {
            return -1;
        }

        int mid = left + (right - left) / 2;

        if (nums[mid] == target) 
        {
            int firstOccurrence = searchFirst(nums, target, left, mid - 1);
            if (firstOccurrence != -1) 
            {
                return firstOccurrence;
            }
            return mid;
        } 

        else if (nums[mid] < target) 
        {
            return searchFirst(nums, target, mid + 1, right);
        } 
        
        else 
        {
            return searchFirst(nums, target, left, mid - 1);
        }
    }

    private int searchLast(int[] nums, int target, int left, int right) 
    {
        if (left > right) 
        {
            return -1;
        }

        int mid = left + (right - left) / 2;

        if (nums[mid] == target) 
        {
            int lastOccurrence = searchLast(nums, target, mid + 1, right);
            if (lastOccurrence != -1) 
            {
                return lastOccurrence;
            }
            return mid;
        } 

        else if (nums[mid] < target) 
        {
            return searchLast(nums, target, mid + 1, right);
        } 
        else 
        {
            return searchLast(nums, target, left, mid - 1);
        }
    }
}
