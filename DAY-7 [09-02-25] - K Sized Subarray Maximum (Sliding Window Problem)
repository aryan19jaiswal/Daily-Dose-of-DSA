PROBLEM TITLE : K Sized Subarray Maximum (Sliding Window Problem)
PROBLEM DIFFICULTY : Medium 
PLATFORM NAME : GeeksForGeeks
PROBLEM LINK : https://www.geeksforgeeks.org/problems/maximum-of-all-subarrays-of-size-k3101/1

SOLUTION : 

class Solution
{
    // Function to find maximum of each subarray of size k.
    public ArrayList<Integer> max_of_subarrays(int k, int arr[])
    {
        ArrayList<Integer> ans = new ArrayList<>();
        Deque<Integer> deque = new LinkedList<>();

        // Traverse through each element of the array
        for (int i = 0; i < arr.length; i++) 
        {
            // Remove indices from deque that are out of this window
            if (!deque.isEmpty() && deque.peekFirst() < i - k + 1) 
            {
                deque.pollFirst();
            }

            // Remove elements from deque which are smaller than the current element
            while (!deque.isEmpty() && arr[deque.peekLast()] <= arr[i]) 
            {
                deque.pollLast();
            }

            // Add the current element's index to the deque
            deque.offerLast(i);

            // Once the first window is complete, start adding the max to the result
            if (i >= k - 1) 
            {
                ans.add(arr[deque.peekFirst()]);
            }
        }

        return ans; 
    }
}
