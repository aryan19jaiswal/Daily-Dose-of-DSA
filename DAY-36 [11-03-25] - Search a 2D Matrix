PROBLEM TITLE : Search a 2D Matrix
PROBLEM DIFFICULTY : Medium
PLATFORM NAME : LeetCode (74)
PROBLEM LINK : https://leetcode.com/problems/search-a-2d-matrix/description/

SOLUTION : [Time Complexity: O(log(m*n)), Space Complexity: O(1)]

class Solution 
{
    public boolean searchMatrix(int[][] matrix, int target) 
    {
        if(matrix.length==0 || matrix[0].length==0)
        {
            return false;
        }

        int rows = matrix.length;
        int cols = matrix[0].length;

        int left = 0;
        int right = rows*cols-1;

        while(left<=right)
        {
            int mid = left+(right-left)/2;

            int row = mid/cols;
            int col = mid%cols;

            if(matrix[row][col]==target)
            {
                return true;
            }
            else if(matrix[row][col]<target)
            {
                left = mid+1;
            }
            else
            {
                right = mid-1;
            }
        }

        return false;
    }
}
