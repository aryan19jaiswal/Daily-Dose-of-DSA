PROBLEM TITLE : k largest elements
PROBLEM DIFFICULTY : Medium
PLATFORM NAME : GeeksForGeeks
PROBLEM LINK : https://www.geeksforgeeks.org/problems/k-largest-elements4206/1

SOLUTION : [Time Complexity: O(n.logn), Space Complexity: O(n)]

class Solution
{
    public ArrayList<Integer> kLargest(int[] arr, int k) 
    {
        ArrayList<Integer> ans = new ArrayList<>();
        
        PriorityQueue<Integer> pq = new PriorityQueue<>(Comparator.reverseOrder());
        
        for(int i=0; i<arr.length; i++)
        {
            pq.add(arr[i]);
        }
        
        for(int i=0; i<k; i++)
        {
            ans.add(pq.remove());
        }
        
        return ans;
    }
}

APPROACH :
Here, I have used a Heap and reversed it Comparator method. By this, it will sort elements in descending order.
After that, I have taken first k elements from the Heap and added them to the Arraylist 'ans'.
And at the end, I have returned the arraylist 'ans'.
